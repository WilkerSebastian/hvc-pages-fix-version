@use '../globals' as global;
@use '../defaults/default' as default;
@use '../index/in' as index;
@use '../documentation/doc' as doc;
@use '../playground/play' as play;
/* -------------------------------------------------------------------- */
@mixin responsive-burguer($window-size) {
    @media screen and (min-width: ($window-size + 1)) {
        display: none; 
    }
}

@mixin navlinks {
    height: default.$menu-buttons-height;
    line-height: default.$menu-buttons-height;

    padding: 0 0.7em;
    font-size: 1.5em;
    
    border-radius: 0.4em;
}

@mixin navlinksbynum($color, $color-hover) {
    background-color: $color;

    @include navlinks;
    
    &:hover {
        background-color: $color-hover;
    }
}

@mixin responsive-menu($top, $items, $window-size) {
    $height: calc(($items + 1.5) * default.$menu-buttons-height);

    @media screen and (max-width: $window-size) {
        position: absolute;
        top: $top;
        right: 0;
        z-index: 10;

        align-items: end;
        flex-direction: column;

        padding: 0.5em;
        backdrop-filter: blur(2px);
        background-color: #{global.$white}#{default.$transparency-menu};

        @include global.hidden;
        @include global.size(fit-content, $height);
        @include global.shadow($type: inset, $blur: 5px, $transparency: 0.3);
        @include global.rounded-border($border-top: 0, $border-bottom: 0.25em);
    }
}
/* -------------------------------------------------------------------- */
header {
    position: sticky;
    top: 0;
    z-index: 1;

    background-color: global.$white;

    @include global.shadow($length1: 1px, $blur: 9px, $transparency: 0.2);

    nav {
        @include global.flex;
        @include global.center;

        position: relative;

        a {
            color: global.$white;

            &:hover {
                text-decoration: underline global.$white 2px;
            }

            &#home {
                font-size: 1.5em;

                @include global.flex($wrap: nowrap);
                @include global.size(7em, default.$home-height);
    
                &:hover {
                    filter: brightness(0.9);
                }
    
                h1 {
                    font-size: 1.8em;

                    span {
                        @include global.setFont(title);

                        &:nth-child(1) {
                            color: global.$color2;
                        }
    
                        &:nth-child(2) {
                            color: global.$color1;
                        }
                    }
                }
            }
        }

        .primary-menu {
            transition: opacity 0.5s;

            @include global.flex;
            
            li {
                @include global.middle;

                .link-nav-1 {
                    @include navlinksbynum(global.$color1, global.$color1-dark);
                }

                .link-nav-2 {
                    @include navlinksbynum(global.$color2, global.$color2-dark);
                }

                .link-nav-3 {
                    @include navlinksbynum(global.$color3, global.$color3-dark);
                }

                button {
                    @include global.flex;
                }
            }
        }

        span {
            color: global.$white;
        }
    }

    &#header-index {
        padding: index.$header-padding 0;
        
        @media screen and (max-width: index.$content-responsive-width) {
            margin-bottom: 1em;
        }

        nav {
            max-width: index.$nav-width;
            
            .primary-menu {
                width: index.$menu-width;
                
                @include responsive-menu(calc(index.$header-height - index.$header-padding), index.$menu-num-buttons, index.$header-responsive-width);
            }

            .burger-menu {
                @include responsive-burguer(index.$header-responsive-width);
            }
        }
    }    

    &#header-doc {
        padding: doc.$header-padding 0;

        nav {
            max-width: doc.$nav-width;

            .primary-menu {
                width: doc.$menu-width;

                @include responsive-menu(calc(doc.$header-height - doc.$header-padding), doc.$menu-num-buttons, doc.$header-responsive-width);
            }

            .burger-menu {
                @include responsive-burguer(doc.$header-responsive-width);
            }
        }
    }

    &#header-play {
        padding: play.$header-padding 0;

        nav {
            max-width: play.$nav-initial-width;

            @media screen and (max-width: play.$screen-responsive-width2) {
                max-width: play.$nav-responsive-width;
            }

            #states-view {
                @include global.size(28em, calc(default.$home-height * 0.9));
                @include global.flex;

                @media screen and (max-width: play.$state-labels-responsive-width) {
                    width: 15em;
                }

                .state {
                    $dot-size: calc(default.$home-height * 0.5);

                    border-radius: 15px;
                    filter: brightness(0.5);
                    
                    @include global.middle;
                    @include global.size(31%, 100%);

                    &:hover {
                        cursor: help;
                    }

                    .tooltip {
                        top: calc(100% + default.$tooltip-size-arr * 2);
                        height: 3em;
                        width: 7em;

                        &::after {
                            @include global.tooltip-top(default.$tooltip-size-arr);
                        }
                    }
                    
                    .state-data {
                        min-width: 75%;
                        @include global.flex;

                        span {
                            font-size: 1.2em;
                            font-weight: bold;
                            text-transform: uppercase;

                            @include global.setFont(mono);
                        
                            &.dot-state {
                                background-color: global.$white;
                                border-radius: 0.1em;

                                transition: 0.5s;
    
                                @include global.size($dot-size);

                                @media screen and (max-width: play.$state-labels-responsive-width) {
                                    @include global.center;
                                }
                            }

                            &.hvm-state {
                                @media screen and (max-width: play.$state-labels-responsive-width) {
                                    display: none;
                                }
                            }
                        }
                    }
                    
                    &#running-state {
                        background-color: play.$nice-green;

                        .state-data {
                            width: 90%;
                        
                            .dot-state {
                                border-radius: 50%;
                            }
                        }
                    }

                    &#charging-state {
                        background-color: play.$golden;
                    }

                    &#editing-state {
                        background-color: play.$live-blue;

                        .dot-state {
                            @include global.background($image: 'playground/menu/pen', $size: cover);
                        }
                    }
                }

                &.editing {
                    #editing-state {
                        filter: brightness(1);
                    }
                }

                &.charging {
                    #charging-state {
                        filter: brightness(1);

                        .dot-state {
                            @include global.load-spin(0.35em, global.$white);
                        }
                    }
                }

                &.running {
                    #running-state {
                        filter: brightness(1);

                        .dot-state {
                            @include global.animation(grow, 1.5s, infinite);
                        }
                    }
                }
            }


            .primary-menu {
                width: calc(play.$menu-width * 1.2);

                @media screen and (min-width: play.$header-responsive-width) and (max-width: play.$tools-buttons-responsive-width) {
                    width: calc(play.$menu-width * 0.5);

                    .tooltip {
                        height: calc(default.$tooltip-height * 1.7);
                        padding: 0 0.5em;
                    }
                }
                    
                @include responsive-menu(calc(play.$header-height - play.$header-padding), play.$menu-num-buttons, play.$header-responsive-width);

                .tooltip {
                    top: calc(100% + default.$tooltip-size-arr + play.$header-padding);

                    &::after {
                        @include global.tooltip-top(default.$tooltip-size-arr);
                    }
                }

                button {
                    padding: 0 0.4em;

                    cursor: pointer;

                    .label-tool {
                        margin-left: 0.5em;
                        
                        @media screen and (min-width: (play.$header-responsive-width + 1)) and (max-width: play.$tools-buttons-responsive-width) {
                            display: none;
                        }
                    }
                }
            }

            .burger-menu {
                @include responsive-burguer(play.$header-responsive-width);
            }

            .tooltip-text {
                font-size: 0.9em;
            }
        }
    }
}