@use '../globals' as global;
@use '../defaults/default' as default;
@use '../index/in' as index;
@use '../documentation/doc' as doc;
@use '../playground/play' as play;
/* -------------------------------------------------------------------- */
@mixin navlinks {
    font-size: 1.5em;
    
    padding: 0 0.7em;
    border: none;
    border-radius: 10px;
}

@mixin navlinksbynum($color, $colorhover) {
    @include navlinks;

    background-color: $color;
    
    &:hover {
        background-color: $colorhover;
    }
}

@mixin responsive-menu($top, $items, $max-screen) {
    @media screen and (max-width: $max-screen) {
        position: absolute;
        z-index: 10;
        top: $top;
        right: 0;
        
        width: fit-content !important;
        
        height: calc($items * default.$menu-buttons-height * 1.4);

        align-items: end !important;
        flex-direction: column;

        padding: 15px;
        border-radius: 0 0 5px 5px;
        background-color: #00000020;
    }
}

@mixin dot-state($animation, $radius) {
    border-radius: $radius;
    
    @include global.animation($animation, 1.5s, infinite);
}

@mixin nav-menu {
    transition: 0.5s;
    
    @include global.flex;
}

@mixin debug-itens($icon) {
    @include global.background($image: 'playground/debugger/#{$icon}', $size: cover);
}
/* -------------------------------------------------------------------- */
header {
    box-shadow: 1px 1px 9px #00000033;
    
    position: sticky;
    top: 0;
    z-index: 1;

    background-color: white;

    nav {
        @include global.flex;
        @include global.center;

        position: relative;

        a {
            color: white;

            &:hover {
                text-decoration: underline #ffffff 2px;
            }

            &#home {
                font-size: 1.5em;
                text-decoration: none;

                @include global.flex($wrap: nowrap);
                @include global.size(170px, default.$home-height);
    
                &:hover {
                    background-color: #00000015;
                }
    
                h1 {
                    font-size: 1.8em;

                    span {
                        @include global.setFont(title);

                        &:nth-child(1) {
                            color: global.$color2;
                        }
    
                        &:nth-child(2) {
                            color: global.$color1;
                        }
                    }
                }
            }
        }

        .primary-menu {
            @include nav-menu;
            
            li {
                .link-nav-1 {
                    @include navlinksbynum(global.$color1, global.$color1-dark);
                }

                .link-nav-2 {
                    @include navlinksbynum(global.$color2, global.$color2-dark);
                }

                .link-nav-3 {
                    @include navlinksbynum(global.$color3, global.$color3-dark);
                }

                button {
                    @include global.flex;
                }

            }
        }

        span {
            color: white;
        }
        
        .burger-menu {
            height: 50px;
            padding: 5px;
            
            background-color: transparent;
            transition: 0.3s;
            cursor: pointer;
            
            @include global.border(transparent, 0, 3px);

            &:hover {
                background-color: hsla(0, 0%, 0%, 0.08);
            }
        }
    }

    &#header-index {
        padding: index.$header-padding 0;
        
        @media screen and (max-width: index.$responsive-width) {
            margin-bottom: 10px;
        }

        nav {
            max-width: index.$nav-width;
            
            .primary-menu {
                width: 55%;
                
                @include responsive-menu(calc(index.$header-height - index.$header-padding), 3, index.$header-responsive-width);
            }
        }
    }    

    &#header-doc {
        padding: doc.$header-padding 0;

        nav {
            max-width: doc.$nav-width;

            .primary-menu {
                width: doc.$menu-width;

                @include responsive-menu(calc(doc.$header-height - doc.$header-padding), 3, doc.$header-responsive-width);
            }
        }
    }

    &#header-play {
        padding: play.$header-padding 0;

        nav {
            max-width: play.$nav-initial-width;

            @media screen and (max-width: play.$screen-responsive-width2) {
                max-width: play.$nav-responsive-width;
            }

            #state {
                border-radius: 15px;
                
                @include global.middle;
                @include global.size(180px, default.$home-height);

                &, * {
                    transition: 0.5s;
                }

                &:hover {
                    cursor: help;
                }
                
                article {
                    @include global.flex;

                    span {
                        font-size: 1.3em;
                        font-weight: bold;
                        text-transform: uppercase;

                        @include global.setFont(mono);
                    }

                    #dot-state {
                        background-color: white;
                        margin-right: 1em;

                        @include global.size(calc(default.$home-height * 0.5));
                    }
                }
                
                &.running {
                    background-color: play.$nice-green;

                    #dot-state {
                        @include dot-state(grow, 50%);
                    }
                }

                &.loading {
                    background-color: play.$golden;
                    
                    #dot-state {
                        $size-border: 5px;

                        border: $size-border solid transparent;
                        border-top: $size-border solid white;
                        border-left: $size-border solid white;

                        background-color: transparent;

                        @include dot-state(spin, 50%);
                    }
                }

                &.stopped {
                    background-color: play.$dark-red;
                    filter: brightness(0.8);
                }
            }

            #debug-menu {
                transition: 0.5s;

                visibility: hidden;
                opacity: 0;

                article {
                    menu {
                        $width: 10em;
                        width: $width;

                        @include nav-menu;

                        li {
                            & {
                                cursor: pointer;
                                @include global.size(calc($width/5));
                            }

                            &#back {
                                @include debug-itens('back');
                            }

                            &#forth {
                                @include debug-itens('forth');
                            }

                            &.pause {
                                @include debug-itens('pause');
                            }

                            &.continue {
                                @include debug-itens('continue');
                            }

                            &#finish {
                                @include debug-itens('finish');
                            }

                            &:hover {
                                filter: drop-shadow(2px 4px 6px #0000009a);
                            }
                        }
                    }
                }
            }

            .primary-menu {
                width: calc(play.$menu-width * 1.2);

                @include responsive-menu(calc(play.$header-height - play.$header-padding), play.$menu-num-buttons, play.$header-responsive-width);

                button {
                    padding: 0 0.4em;

                    cursor: pointer;

                    img {
                        margin-right: 0.5em;
                    }
                }
            }
        }
    }
}