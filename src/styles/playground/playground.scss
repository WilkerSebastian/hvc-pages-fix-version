@use '../globals' as global;
@use './play' as play;
@use '../defaults/default' as default;
@use './responsiveplay' as responsive;
/* -------------------------------------------------------------------- */
@mixin portacartoes-viewers {
    @include global.shadow($length1: 3px, $blur: 5px, $transparency: 0.2);
}

@mixin numbers($top, $right, $deg, $width, $height) {
    top: $top;
    right: $right;

    transform: skewY(#{$deg}deg);

    @include global.size($width, $height);
}
/* -------------------------------------------------------------------- */
main {
    @include global.middle;
    @include global.center;
    @include global.size(100%, play.$main-initial-height);
    // @include global.size(play.$main-initial-width, play.$main-initial-height);

    @include responsive.main;
    
    #playground {
        @include global.flex;
        @include global.size(play.$nav-initial-width, play.$playground-percentual * 100%);

        @include responsive.playground;

        .tooltip {
            z-index: 1;

            .tooltip-text {
                font-size: 1.1em;
            }
        }

        #porta-cartoes {
            $font-size: 2em;

            text-align: center;
            background-color: play.$old-paper;

            // min-width: 20em;
            
            @include global.flex($justify: center);
            @include global.size(play.$porta-cartoes-initial-width, 100%);
            
            @include portacartoes-viewers;
            @include responsive.porta-cartoes;
            
            #scroll-tablecards {
                width: 100%;
                overflow-y: auto;

                #cards {
                    width: 100%;
                    border-spacing: 0.5em;

                    tr { 
                        background-color: global.$white;

                        &:hover {
                            background-color: global.$lightgray;
                        }
                        
                        td {
                            padding: 0.25em 0;
                            border: 0.05em solid global.$black;
                            
                            font-size: $font-size;
                            @include global.setFont(dotted);
                        }
                    }
                }
            }

            #editor {
                font-size: $font-size;
                @include global.size(100%);

                &, * {
                    background-color: play.$old-paper;

                    @include global.setFont(code);
                }

                .cm-scroller {
                    overflow-x: hidden;
                }

                .cm-lineNumbers > * {
                    font-size: 0.9em;
                    user-select: none;
                }
                
                br {
                    content: inherit;
                }
            }

            .tooltip {
                left: default.$tooltip-size-arr;
                bottom: default.$tooltip-size-arr;

                &::after {
                    @include global.tooltip-top(default.$tooltip-size-arr);
                }
            }
        }
        
        .debuggers {
            @include global.flex;
            @include global.size(play.$debuggers-initial-width, 100%);
            // @include global.flex($align: normal, $direction: column, $justify: space-around);

           @include responsive.debuggers;

            > * {
                width: 100%;
            }

            .viewers {
                $radius: 0.2em;

                @include global.flex;

                @include responsive.debuggers-childs-flex;
                @include responsive.debuggers-childs-size;

                > * {
                    max-width: 100%;

                    @include global.middle;
                    @include global.size(play.$viewers-initial-size);
                    
                    @include portacartoes-viewers;
                    @include responsive.viewers-childs;
                }

                .viewers-values {
                    font-size: play.$viewers-font-size;
                }
        
                #contorno-epi {
                    border-radius: $radius;
                    background-color: play.$brown-wood;
        
                    #epi {
                        border-radius: $radius;
                        background-color: play.$green-board;

                        @include global.middle;
                        @include global.size(88%);
        
                        #epi-value {
                            color: global.$white;
                            @include global.setFont(chalk);
                        }
                    }
                }
        
                #acumulador {
                    $border-width: 0.5em;
                    
                    background-color: play.$lightgreen-display;
                    
                    border-radius: $radius;
                    border: $border-width ridge global.$black;
        
                    #acumulador-value, #overlay {
                        font-size: calc(play.$viewers-font-size * 0.9);

                        @include global.absolute-middle;
                        @include global.setFont(segment);
        
                        &#overlay {
                            user-select: none;
                            color: #{global.$black}15;
                        }
                    }
                }

                #folha-de-saida {
                    @include global.background($image: 'playground/notepad', $size: contain);
        
                    #saida-value {
                        margin-top: 0.2em;
                        font-size: calc(play.$viewers-font-size * 1.2);
    
                        @include global.setFont(cursive);
                    }
                }

                .tooltip {
                    bottom: default.$tooltip-size-arr;

                    &::after {
                        @include global.tooltip-top(default.$tooltip-size-arr);
                    }
                }
            }

            #gaveteiro {
                user-select: none;

                @include global.middle;
                @include responsive.gaveteiro;
                @include responsive.debuggers-childs-size;
            
                .tooltip {
                    bottom: calc(100% - default.$tooltip-size-arr);

                    &::after {
                        @include global.tooltip-bottom(default.$tooltip-size-arr);
                    }
                }

                #scroll-gaveteiro {
                    overflow: auto;
                    
                    @include global.flex($wrap: nowrap);

                    @include responsive.scrollgaveteiro;
                    @include responsive.debuggers-childs-flex;

                    .drawer {
                        min-width: play.$gaveta-width;
                        min-height: play.$gaveta-height;

                        filter: drop-shadow(4px 7px 2px #{global.$black}80);

                        @include global.animation(twink, 1.5s, 1);
                        @include global.background($image: 'playground/gaveteiro', $repeat: no-repeat, $size: contain, $position: 0);

                        &:hover {
                            filter: hue-rotate(45deg) !important;
                        }

                        &:not(:first-child, :last-child) {
                            margin: 0 play.$gaveta-margin;

                            @include responsive.gavetas;
                        }

                        &.default {
                            animation: inherit;
                            filter: brightness(0.5);
                        }

                        &.code {
                            filter: hue-rotate(300deg);
                        }
                        
                        &.data {
                            filter: hue-rotate(210deg);
                        }

                        &.pointed {
                            filter: hue-rotate(110deg);
                        }
                        
                        &:first-child {
                            margin-right: play.$gaveta-margin;
                            // margin: 0 play.$gaveta-margin 0 0;
                            @include responsive.gavetas;
                        }

                        &:last-child {
                            margin-left: play.$gaveta-margin;
                            // margin: 0 0 0 play.$gaveta-margin;
                            @include responsive.gavetas;
                        }

                        div {
                            position: absolute;

                            @include global.middle;

                            &:first-child {
                                @include numbers(40px, initial, 13, 88px, 86px);
                            }

                            &:last-child {
                                @include numbers(42px, 0, -28, 50px, 75px);
                            }

                            span {
                                color: global.$white;

                                @include global.setFont(mono);

                                &.num-drawer {
                                    font-size: 2em;
                                    font-weight: bold;
                                }

                                &.cont-drawer {
                                    font-size: 1.5em;
                                }
                            }
                        }
                    }
                }
            }
        }

        #debug-menu {
            width: 100%;

            left: 0;
            bottom: 0;
            z-index: 999;
            position: fixed;

            transition: 0.5s;

            @include global.hidden;

            menu {
                $width: 15em;
                $height: calc($width/3);
                $border-radius: 1em;

                max-width: 90%;

                padding: 1em 0.5em;
                background-color: global.$lightgray;

                border: 0.3em ridge global.$black;

                border-bottom: none;

                @include global.flex;
                @include global.center;
                @include global.size($width, $height);
                @include global.rounded-border($border-radius, 0);

                li {
                    $radius: 20%;
                    $color: global.$black;
                    $size-icon: calc($height/2);
                    $size-border: calc($size-icon/2);

                    cursor: pointer;
                    filter: brightness(0.5);
                    
                    border: $size-border solid transparent;

                    &#back {
                        border-left-width: 0;
                        border-right-width: calc($size-icon);

                        border-radius: $radius;
                        border-right-color: $color;
                        
                        &:hover {
                            border-right-color: play.$live-blue;
                        }
                    }

                    &#forth {
                        border-right-width: 0;
                        border-left-width: calc($size-icon);
                        
                        border-radius: $radius;
                        border-left-color: $color;
                        
                        &:hover {
                            border-left-color: play.$live-blue;
                        }
                    }

                    &#pause-continue {
                        @include global.size($size-icon);

                        &.pause {
                            border-style: double;
                            border-color: play.$nice-green;
                            
                            border-width: 0 0 0 $size-icon;
                        }

                        &.continue {
                            border-right-width: 0;

                            border-left-width: calc($size-icon);
                            border-left-color: play.$nice-green;
                        }
                    }

                    &#finish {
                        border-color: play.$dark-red;
                    }

                    &:hover {
                        scale: 1.05;
                        filter: brightness(1);
                    }

                    &:active {
                        filter: contrast(0.5);
                    }
                }
            }
        }
    }
}

#help {
    @include global.circle;
    @include global.fixed-button;
    @include global.faded-button(info);
}